{"version":3,"sources":["components/favorites/favoritesTable.jsx","components/favorites/favorites.jsx"],"names":["FavoritesTable","columns","key","content","favorite","to","listing","_id","className","src","images","url","noImage","alt","title","style","imageStyling","path","label","onClick","window","confirm","props","onDelete","favorites","this","data","Component","width","height","borderRadius","border","borderColor","borderStyle","Favorites","state","currentPage","pageSize","numberOfPageButtons","sortColumn","order","loading","handleDelete","a","originaFavorites","filter","l","getCurrentPage","setState","favoritesApi","deleteFavorite","response","status","toast","error","handlePageChange","page","handleSort","getMyFavorites","console","log","location","pathname","getPagedData","totalCount","name","noAddButton","itemsCount","numberOfButtons","onPageChange"],"mappings":"iOAMMA,E,4MACJC,QAAU,CACR,CACEC,IAAK,MACLC,QAAS,SAACC,GAAD,OACP,cAAC,IAAD,CAAMC,GAAE,2BAAsBD,EAASE,QAAQC,KAA/C,SACE,qBACEC,UAAU,SACVC,IAAKL,EAASE,QAAQI,OAAO,GAAGC,KAAOC,IACvCC,IAAKT,EAASE,QAAQQ,MACtBC,MAAOC,QAMf,CAAEC,KAAM,gBAAiBC,MAAO,SAChC,CAAED,KAAM,gBAAiBC,MAAO,SAChC,CACEhB,IAAK,SACLC,QAAS,SAACC,GAAD,OACP,wBACEe,QAAS,WACHC,OAAOC,QAAQ,wCACjB,EAAKC,MAAMC,SAASnB,IAGxBI,UAAU,oCANZ,uB,4CAeN,WAAU,IACAgB,EAAcC,KAAKH,MAAnBE,UAER,OACE,cAAC,IAAD,CACEvB,QAASwB,KAAKxB,QACdyB,KAAMF,Q,GA1CeG,aAgDvBX,EAAe,CACnBY,MAAO,GACPC,OAAQ,IACRC,aAAc,EACdC,OAAQ,EACRC,YAAa,OACbC,YAAa,SAGAjC,I,kCClDTkC,E,4MACJC,MAAQ,CACNX,UAAW,GACXY,YAAa,EACbC,SAAU,EACVC,oBAAqB,EACrBC,WAAY,CAAEtB,KAAM,QAASuB,MAAO,QACpCC,SAAS,G,EAYXC,a,uCAAe,WAAOtC,GAAP,mBAAAuC,EAAA,6DACPC,EAAmB,EAAKT,MAAMX,UAC9BA,EAAYoB,EAAiBC,QAAO,SAACC,GAAD,OAAOA,EAAEvC,MAAQH,EAASG,OAE9D6B,EAAcW,YAClBvB,EACA,EAAKW,MAAMC,YACX,EAAKD,MAAME,UAGb,EAAKW,SAAS,CAAExB,YAAWY,gBAVd,kBAaLa,IAAaC,eAAe9C,EAASG,KAbhC,uDAeP,KAAG4C,UAAmC,MAAvB,KAAGA,SAASC,QAC7BC,IAAMC,MAAM,2CAEd,EAAKN,SAAS,CAAExB,UAAWoB,IAlBhB,yD,wDAsBfW,iBAAmB,SAACC,GAClB,EAAKR,SAAS,CAAEZ,YAAaoB,K,EAG/BC,WAAa,SAAClB,GACZ,EAAKS,SAAS,CAAET,gB,8FAlClB,8BAAAI,EAAA,6DACElB,KAAKuB,SAAS,CAAEP,SAAS,IAD3B,SAEoCQ,IAAaS,iBAFjD,gBAEgBlC,EAFhB,EAEUE,KACRiC,QAAQC,IAAIpC,GACZC,KAAKuB,SAAS,CAAExB,YAAWiB,SAAS,IAJtC,gD,0EA6CA,WACE,IAAMxB,EAAOQ,KAAKH,MAAMuC,SAASC,SAD1B,EAQHrC,KAAKU,MALPE,EAHK,EAGLA,SACAD,EAJK,EAILA,YACAE,EALK,EAKLA,oBAEAG,EAPK,EAOLA,QAPK,EASiCsB,YACtCtC,KAAKU,MACLV,KAAKU,MAAMX,UACXP,GAHM+C,EATD,EASCA,WAAkBxC,EATnB,EASaE,KAMpB,OACE,mCACE,cAAC,IAAD,UACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,IAAD,CACEyD,KAAM,WACND,WAAYA,EACZE,YAAa,SAGf,cAAC,EAAD,CACE1C,UAAWA,EAEXD,SAAUE,KAAKiB,eAIhBD,GAAW,cAAC,IAAD,IACZ,cAAC,IAAD,CACE0B,WAAYH,EACZ3B,SAAUA,EACVD,YAAaA,EACbgC,gBAAiB9B,EACjB+B,aAAc5C,KAAK8B,8B,GA/FT5B,aAwGTO","file":"static/js/4.de0ad6b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Table from \"../common/tableFolder/table\";\nimport noImage from \"../common/img/noimage.png\";\n\nclass FavoritesTable extends Component {\n  columns = [\n    {\n      key: \"img\",\n      content: (favorite) => (\n        <Link to={`/listing/details/${favorite.listing._id}`}>\n          <img\n            className=\"imaage\"\n            src={favorite.listing.images[0].url || noImage}\n            alt={favorite.listing.title}\n            style={imageStyling}\n          />\n        </Link>\n      ),\n    },\n   \n    { path: \"listing.title\", label: \"Title\" },\n    { path: \"listing.price\", label: \"Price\" },\n    {\n      key: \"delete\",\n      content: (favorite) => (\n        <button\n          onClick={() => {\n            if (window.confirm(\"Are you sure to delete this record?\")) {\n              this.props.onDelete(favorite);\n            }\n          }}\n          className=\"btn btn-danger btn-sm btn--square\"\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n\n  render() {\n    const { favorites } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={favorites}\n      />\n    );\n  }\n}\n\nconst imageStyling = {\n  width: 80,\n  height: 100,\n  borderRadius: 3,\n  border: 3,\n  borderColor: \"#fff\",\n  borderStyle: \"solid\",\n};\n\nexport default FavoritesTable;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\n\n// import { GlobalContainer } from \"./common\";\nimport { Pagination, getCurrentPage, getPagedData } from \"../common/pagination\";\nimport FavoritesTable from \"./favoritesTable\";\nimport favoritesApi from \"../../services/favoriteService\";\nimport Spinner from \"../spinner\";\nimport GlobalContainer from \"../common/tableFolder/globalContainer\";\n\nimport Header from \"../common/tableFolder/header\";\n\n\nclass Favorites extends Component {\n  state = {\n    favorites: [],\n    currentPage: 1,\n    pageSize: 4,\n    numberOfPageButtons: 8,\n    sortColumn: { path: \"title\", order: \"desc\" },\n    loading: false,\n    // showModal: false,\n    // member: {},\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const { data: favorites } = await favoritesApi.getMyFavorites();\n    console.log(favorites);\n    this.setState({ favorites, loading: false });\n  }\n\n  handleDelete = async (favorite) => {\n    const originaFavorites = this.state.favorites;\n    const favorites = originaFavorites.filter((l) => l._id !== favorite._id);\n\n    const currentPage = getCurrentPage(\n      favorites,\n      this.state.currentPage,\n      this.state.pageSize\n    );\n\n    this.setState({ favorites, currentPage });\n\n    try {\n      await favoritesApi.deleteFavorite(favorite._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This favorite has already been deleted.\");\n\n      this.setState({ favorites: originaFavorites });\n    }\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  // handleModalShow = (member) => {\n  //   this.setState({ member, showModal: true });\n  // };\n\n  // closeModalHandler = () => {\n  //   this.setState({ showModal: false });\n  // };\n\n  render() {\n    const path = this.props.location.pathname;\n    const {\n      pageSize,\n      currentPage,\n      numberOfPageButtons,\n      // sortColumn,\n      loading,\n    } = this.state;\n    const { totalCount, data: favorites } = getPagedData(\n      this.state,\n      this.state.favorites,\n      path\n    );\n\n    return (\n      <>\n        <GlobalContainer>\n          <div className=\"col\">\n            <Header\n              name={\"Bookmark\"}\n              totalCount={totalCount}\n              noAddButton={\"true\"}\n            />\n\n            <FavoritesTable\n              favorites={favorites}\n              // sortColumn={sortColumn}\n              onDelete={this.handleDelete}\n              // onSort={this.handleSort}\n              // onModalShow={this.handleModalShow}\n            />\n            {loading && <Spinner />}\n            <Pagination\n              itemsCount={totalCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              numberOfButtons={numberOfPageButtons}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </GlobalContainer>\n      </>\n    );\n  }\n}\n\nexport default Favorites;\n"],"sourceRoot":""}